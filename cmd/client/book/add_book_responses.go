// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/janPhil/bookstore/cmd/models"
)

// AddBookReader is a Reader for the AddBook structure.
type AddBookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddBookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddBookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 501:
		result := NewAddBookNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddBookOK creates a AddBookOK with default headers values
func NewAddBookOK() *AddBookOK {
	return &AddBookOK{}
}

/*AddBookOK handles this case with default header values.

Data structure representing a single book
*/
type AddBookOK struct {
	Payload *models.Book
}

func (o *AddBookOK) Error() string {
	return fmt.Sprintf("[POST /book][%d] addBookOK  %+v", 200, o.Payload)
}

func (o *AddBookOK) GetPayload() *models.Book {
	return o.Payload
}

func (o *AddBookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Book)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBookNotImplemented creates a AddBookNotImplemented with default headers values
func NewAddBookNotImplemented() *AddBookNotImplemented {
	return &AddBookNotImplemented{}
}

/*AddBookNotImplemented handles this case with default header values.

Generic error message returned as a string
*/
type AddBookNotImplemented struct {
	Payload *models.GenericError
}

func (o *AddBookNotImplemented) Error() string {
	return fmt.Sprintf("[POST /book][%d] addBookNotImplemented  %+v", 501, o.Payload)
}

func (o *AddBookNotImplemented) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *AddBookNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
